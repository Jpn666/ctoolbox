 /*
 * Copyright (C) 2025, jpn
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef f6fc5398_0274_42a2_9186_20cc03b729d0
#define f6fc5398_0274_42a2_9186_20cc03b729d0

/*
 * config.h
 * Configuration flags.
 */

/* ***************************************************************************
 * Processor specific
 *************************************************************************** */

/* Define one of them if endiannes auto detection fails. */
#mesondefine CTB_CFG_LITTLEENDIAN
#mesondefine CTB_CFG_BIGENDIAN


/* Define it if your target is a 64bit arch. */
#mesondefine CTB_CFG_ENV64


/* ... */
#mesondefine CTB_CFG_STRICTALIGNMENT


/* Define it if unaligned memory access is efficient. */
#mesondefine CTB_CFG_FASTUNALIGNED


/* ***************************************************************************
 * Platform
 *************************************************************************** */

/* Compiler features. */
#mesondefine CTB_CFG_NOSTDINT
#mesondefine CTB_CFG_NOSTDBOOL

/* c23 checked int */
#mesondefine CTB_CFG_HAS_STDCKDINT
#mesondefine CTB_CFG_HAS_CKDINT_INTRINSICS

/* */
#mesondefine CTB_CFG_NOSTDLIB


/* In this way we don't have to deal with compiler definitions. */
#mesondefine CTB_CFG_PLATFORM_UNIX
#mesondefine CTB_CFG_PLATFORM_WINDOWS


/* ***************************************************************************
 * Function visibility attributes
 *************************************************************************** */

#if defined(CTOOLBOX_DLL)
	#if defined(_WIN32)
		#if defined(CTOOLBOX_BUILDDLL)
			#define CTOOLBOX_API __declspec(dllexport)
		#else
			#define CTOOLBOX_API __declspec(dllimport)
		#endif
	#endif
#endif

#ifndef CTOOLBOX_API
	#if defined(__GNUC__)
		#define CTOOLBOX_API __attribute__((visibility("default")))
	#else
		#define CTOOLBOX_API
	#endif
#endif


/* ***************************************************************************
 * Version number
 *************************************************************************** */

#define CTOOLBOX_VERSION_MAJOR @version_major@
#define CTOOLBOX_VERSION_MINOR @version_minor@
/* revision */
#define CTOOLBOX_VERSION_PATCH @version_patch@


#define CTOOLBOX_VERSION_STRING "@version@"


/*
 * Version info */
struct CTOOLBOXVersion {
	int major;
	int minor;
	int patch;
	const char* versionstring;
	const char* builddate;
};

/*
 * */
CTOOLBOX_API
struct CTOOLBOXVersion ctoolbox_getversion(void);


#endif
